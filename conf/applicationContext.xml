<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/jee 
						http://www.springframework.org/schema/jee/spring-jee.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/context 
    					http://www.springframework.org/schema/context/spring-context.xsd
    					http://www.springframework.org/schema/cache 
    					http://www.springframework.org/schema/cache/spring-cache.xsd
    					http://www.springframework.org/schema/task  
    					http://www.springframework.org/schema/task/spring-task-3.1.xsd">
   
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
    
    <task:annotation-driven scheduler="myScheduler"/> 
     <task:scheduler id="myScheduler" pool-size="5"/>
    
    <!-- scan bean -->
    <context:component-scan base-package="cn.com.egova">
       <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- init dataSource not real -->
    <bean id="bizInitdataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		    <property name="url" value="${jdbc.url}"/>
        	<property name="username" value="dlinit"/>
        	<property name="password" value="cyberway"/>   
			<property name="driverClassName" value="${jdbc.driverClassName}"/>
    </bean>
    
    <!-- real dataSource , usually username and password need delete  -->
    <bean id="bizDataSource" class="org.apache.commons.dbcp.BasicDataSource" scope="singleton">
		    <property name="url" value="${jdbc.url}"/>
			<property name="driverClassName" value="${jdbc.driverClassName}"/>
			<property name="initialSize" value="10"/>
			<property name="maxActive" value="500"/>
			<property name="maxIdle" value="50"/>
			<property name="minIdle" value="20"/>
			<property name="maxWait" value="30000"/>
			<property name="removeAbandonedTimeout" value="100"/>
			<property name="removeAbandoned" value="true"/>
			<property name="testWhileIdle" value="true"/>   
			<property name="testOnBorrow" value="false"/>   
			<property name="testOnReturn" value="false"/>   
		    <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
    </bean>
	
    
    
    <!-- 
    <bean id="egovaDynamicDataSource" class="cn.com.egova.base.config.EgovaDynamicDataSource" >
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="bizDataSource" value-ref="bizDataSource"></entry>		
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="bizDataSource"/>
	</bean> 
     -->
    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    	<property name="dataSource" ref="bizDataSource"/>
    </bean>
    
    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
    	<constructor-arg ref="bizDataSource"></constructor-arg>
    </bean>
    
    <!-- oracle big object handler -->
    <bean id="nativeJdbcExtractor" 
          class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"
          lazy-init="true"/>
    <bean id="lobHandler"  class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true">  
    	  <property name="nativeJdbcExtractor" ref="nativeJdbcExtractor"/>
    </bean>
    
	<!-- Transaction manager for a single JDBC DataSource -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" lazy-init="true">
		<property name="dataSource" ref="bizDataSource"/>
	</bean>
	
	<!-- 数据操作属性，以get开头的方法认为是读数据方法，不进行数据编辑 -->
	<bean id="attributeSource" class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
		<property name="properties">
			<props>
				<prop key="get*,is*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<!-- 事务拦截器 -->
	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager"/>
		</property>
		<property name="transactionAttributeSource">
			<ref bean="attributeSource"/>
		</property>
	</bean>
	
	<!-- 事务自动代理类，对以Manager结尾的类进行事务代理 -->
	<bean id="autoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames">
			<value>transactionInterceptor</value>
		</property>
		<property name="beanNames">
			<value>*Manager</value>
		</property>
	</bean> 
	
	<!-- annotation cache -->
    <cache:annotation-driven cache-manager="cacheManager"/>
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache"/>
	<!-- EhCache library setup -->
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:shared="true" p:config-location="classpath:ehcache.xml"/>
    
</beans>